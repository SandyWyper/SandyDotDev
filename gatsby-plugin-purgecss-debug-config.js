{ context: '/home/sandy/Documents/coding projects/SandyDotDev',
  entry:
   { commons:
      [ '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/event-source-polyfill/src/eventsource.js',
        '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/webpack-hot-middleware/client.js?path=/__webpack_hmr&reload=true&overlay=false',
        '/home/sandy/Documents/coding projects/SandyDotDev/.cache/app' ] },
  output:
   { path: '/home/sandy/Documents/coding projects/SandyDotDev',
     filename: '[name].js',
     pathinfo: true,
     publicPath: '/',
     devtoolModuleFilenameTemplate: [Function: devtoolModuleFilenameTemplate],
     crossOriginLoading: 'anonymous' },
  module:
   { rules:
      [ { test: /\.(js|mjs|jsx)$/,
          include: [Function: include],
          type: 'javascript/auto',
          use:
           [ { options: { stage: 'develop', configFile: true, compact: false },
               loader:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby/dist/utils/babel-loader.js' } ] },
        { test: /\.ya?ml/,
          use:
           [ { options: {},
               loader:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/json-loader/index.js' },
             { options: {},
               loader:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/yaml-loader/index.js' } ] },
        { use:
           [ { loader:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/url-loader/dist/cjs.js',
               options: { limit: 10000, name: 'static/[name]-[hash].[ext]' } } ],
          test: /\.(eot|otf|ttf|woff(2)?)(\?.*)?$/ },
        { use:
           [ { loader:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/url-loader/dist/cjs.js',
               options: { limit: 10000, name: 'static/[name]-[hash].[ext]' } } ],
          test: /\.(ico|svg|jpg|jpeg|png|gif|webp)(\?.*)?$/ },
        { use:
           [ { loader:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/url-loader/dist/cjs.js',
               options: { limit: 10000, name: 'static/[name]-[hash].[ext]' } } ],
          test: /\.(mp4|webm|ogv|wav|mp3|m4a|aac|oga|flac)$/ },
        { use:
           [ { loader:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/file-loader/dist/cjs.js',
               options: { name: 'static/[name]-[hash].[ext]' } } ],
          test: /\.pdf$/ },
        { test:
           '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/@reach/router/es/index.js',
          type: 'javascript/auto',
          use:
           [ { loader:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby/dist/utils/reach-router-add-basecontext-export-loader.js' } ] },
        { enforce: 'pre',
          test: /\.jsx?$/,
          exclude: /(node_modules|bower_components)/,
          use:
           [ { options:
                { useEslintrc: false,
                  resolvePluginsRelativeTo:
                   '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby/dist/utils',
                  baseConfig:
                   { globals:
                      { graphql: true, __PATH_PREFIX__: true, __BASE_PATH__: true },
                     extends:
                      [ '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/eslint-config-react-app/index.js' ],
                     plugins: [ 'graphql' ],
                     rules:
                      { 'import/no-webpack-loader-syntax': [ 0 ],
                        'graphql/template-strings':
                         [ 'error',
                           { env: 'relay',
                             schemaString:
                              '# Provides default value for input field.\ndirective @default(value: JSON!) on INPUT_FIELD_DEFINITION\n\n# Add date formating options.\ndirective @dateformat(formatString: String, locale: String, fromNow: Boolean, difference: String) on FIELD_DEFINITION\n\n# Link to node by foreign-key relation.\ndirective @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION\n\n# Link to File node by relative path.\ndirective @fileByRelativePath(from: String) on FIELD_DEFINITION\n\n# Proxy resolver from another field.\ndirective @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION\n\n# Infer field types from field values.\ndirective @infer(\n  # Don\'t add default resolvers to defined fields.\n  noDefaultResolvers: Boolean\n) on OBJECT\n\n# Do not infer field types from field values.\ndirective @dontInfer(\n  # Don\'t add default resolvers to defined fields.\n  noDefaultResolvers: Boolean\n) on OBJECT\n\n# Define the mime-types handled by this type.\ndirective @mimeTypes(\n  # The mime-types handled by this type.\n  types: [String!]! = []\n) on OBJECT\n\n# Define parent-child relations between types. This is used to add `child*` or\n# `children*` convenience fields like `childImageSharp`.\ndirective @childOf(\n  # A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.\n  mimeTypes: [String!]! = []\n\n  # A list of types this type is a child of. Usually these are the types handled by a transformer plugin.\n  types: [String!]! = []\n\n  # Specifies whether a parent can have multiple children of this type or not.\n  many: Boolean! = false\n) on OBJECT\n\n# Adds root query fields for an interface. All implementing types must also implement the Node interface.\ndirective @nodeInterface on INTERFACE\n\ninput BooleanQueryOperatorInput {\n  eq: Boolean\n  ne: Boolean\n  in: [Boolean]\n  nin: [Boolean]\n}\n\n# A date string, such as 2007-12-03, compliant with the ISO 8601 standard for\n# representation of dates and times using the Gregorian calendar.\nscalar Date\n\ninput DateQueryOperatorInput {\n  eq: Date\n  ne: Date\n  gt: Date\n  gte: Date\n  lt: Date\n  lte: Date\n  in: [Date]\n  nin: [Date]\n}\n\ntype Directory implements Node {\n  sourceInstanceName: String!\n  absolutePath: String!\n  relativePath: String!\n  extension: String!\n  size: Int!\n  prettySize: String!\n  modifiedTime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  accessTime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  changeTime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  birthTime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  root: String!\n  dir: String!\n  base: String!\n  ext: String!\n  name: String!\n  relativeDirectory: String!\n  dev: Int!\n  mode: Int!\n  nlink: Int!\n  uid: Int!\n  gid: Int!\n  rdev: Int!\n  ino: Float!\n  atimeMs: Float!\n  mtimeMs: Float!\n  ctimeMs: Float!\n  atime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  mtime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  ctime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  birthtime: Date @deprecated(reason: "Use `birthTime` instead")\n  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")\n  blksize: Int\n  blocks: Int\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ntype DirectoryConnection {\n  totalCount: Int!\n  edges: [DirectoryEdge!]!\n  nodes: [Directory!]!\n  pageInfo: PageInfo!\n  distinct(field: DirectoryFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!\n}\n\ntype DirectoryEdge {\n  next: Directory\n  node: Directory!\n  previous: Directory\n}\n\nenum DirectoryFieldsEnum {\n  sourceInstanceName\n  absolutePath\n  relativePath\n  extension\n  size\n  prettySize\n  modifiedTime\n  accessTime\n  changeTime\n  birthTime\n  root\n  dir\n  base\n  ext\n  name\n  relativeDirectory\n  dev\n  mode\n  nlink\n  uid\n  gid\n  rdev\n  ino\n  atimeMs\n  mtimeMs\n  ctimeMs\n  atime\n  mtime\n  ctime\n  birthtime\n  birthtimeMs\n  blksize\n  blocks\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n}\n\ninput DirectoryFilterInput {\n  sourceInstanceName: StringQueryOperatorInput\n  absolutePath: StringQueryOperatorInput\n  relativePath: StringQueryOperatorInput\n  extension: StringQueryOperatorInput\n  size: IntQueryOperatorInput\n  prettySize: StringQueryOperatorInput\n  modifiedTime: DateQueryOperatorInput\n  accessTime: DateQueryOperatorInput\n  changeTime: DateQueryOperatorInput\n  birthTime: DateQueryOperatorInput\n  root: StringQueryOperatorInput\n  dir: StringQueryOperatorInput\n  base: StringQueryOperatorInput\n  ext: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  relativeDirectory: StringQueryOperatorInput\n  dev: IntQueryOperatorInput\n  mode: IntQueryOperatorInput\n  nlink: IntQueryOperatorInput\n  uid: IntQueryOperatorInput\n  gid: IntQueryOperatorInput\n  rdev: IntQueryOperatorInput\n  ino: FloatQueryOperatorInput\n  atimeMs: FloatQueryOperatorInput\n  mtimeMs: FloatQueryOperatorInput\n  ctimeMs: FloatQueryOperatorInput\n  atime: DateQueryOperatorInput\n  mtime: DateQueryOperatorInput\n  ctime: DateQueryOperatorInput\n  birthtime: DateQueryOperatorInput\n  birthtimeMs: FloatQueryOperatorInput\n  blksize: IntQueryOperatorInput\n  blocks: IntQueryOperatorInput\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ntype DirectoryGroupConnection {\n  totalCount: Int!\n  edges: [DirectoryEdge!]!\n  nodes: [Directory!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput DirectorySortInput {\n  fields: [DirectoryFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ninput DuotoneGradient {\n  highlight: String!\n  shadow: String!\n  opacity: Int\n}\n\ntype File implements Node {\n  sourceInstanceName: String!\n  absolutePath: String!\n  relativePath: String!\n  extension: String!\n  size: Int!\n  prettySize: String!\n  modifiedTime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  accessTime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  changeTime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  birthTime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  root: String!\n  dir: String!\n  base: String!\n  ext: String!\n  name: String!\n  relativeDirectory: String!\n  dev: Int!\n  mode: Int!\n  nlink: Int!\n  uid: Int!\n  gid: Int!\n  rdev: Int!\n  ino: Float!\n  atimeMs: Float!\n  mtimeMs: Float!\n  ctimeMs: Float!\n  atime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  mtime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  ctime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  birthtime: Date @deprecated(reason: "Use `birthTime` instead")\n  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")\n  blksize: Int\n  blocks: Int\n\n  # Copy file to static directory and return public url to it\n  publicURL: String\n  childImageSharp: ImageSharp\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  childMarkdownRemark: MarkdownRemark\n}\n\ntype FileConnection {\n  totalCount: Int!\n  edges: [FileEdge!]!\n  nodes: [File!]!\n  pageInfo: PageInfo!\n  distinct(field: FileFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!\n}\n\ntype FileEdge {\n  next: File\n  node: File!\n  previous: File\n}\n\nenum FileFieldsEnum {\n  sourceInstanceName\n  absolutePath\n  relativePath\n  extension\n  size\n  prettySize\n  modifiedTime\n  accessTime\n  changeTime\n  birthTime\n  root\n  dir\n  base\n  ext\n  name\n  relativeDirectory\n  dev\n  mode\n  nlink\n  uid\n  gid\n  rdev\n  ino\n  atimeMs\n  mtimeMs\n  ctimeMs\n  atime\n  mtime\n  ctime\n  birthtime\n  birthtimeMs\n  blksize\n  blocks\n  publicURL\n  childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resolutions___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___sizes___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  childMarkdownRemark___id\n  childMarkdownRemark___frontmatter___title\n  childMarkdownRemark___frontmatter___posttype\n  childMarkdownRemark___frontmatter___date\n  childMarkdownRemark___frontmatter___category\n  childMarkdownRemark___frontmatter___cover___sourceInstanceName\n  childMarkdownRemark___frontmatter___cover___absolutePath\n  childMarkdownRemark___frontmatter___cover___relativePath\n  childMarkdownRemark___frontmatter___cover___extension\n  childMarkdownRemark___frontmatter___cover___size\n  childMarkdownRemark___frontmatter___cover___prettySize\n  childMarkdownRemark___frontmatter___cover___modifiedTime\n  childMarkdownRemark___frontmatter___cover___accessTime\n  childMarkdownRemark___frontmatter___cover___changeTime\n  childMarkdownRemark___frontmatter___cover___birthTime\n  childMarkdownRemark___frontmatter___cover___root\n  childMarkdownRemark___frontmatter___cover___dir\n  childMarkdownRemark___frontmatter___cover___base\n  childMarkdownRemark___frontmatter___cover___ext\n  childMarkdownRemark___frontmatter___cover___name\n  childMarkdownRemark___frontmatter___cover___relativeDirectory\n  childMarkdownRemark___frontmatter___cover___dev\n  childMarkdownRemark___frontmatter___cover___mode\n  childMarkdownRemark___frontmatter___cover___nlink\n  childMarkdownRemark___frontmatter___cover___uid\n  childMarkdownRemark___frontmatter___cover___gid\n  childMarkdownRemark___frontmatter___cover___rdev\n  childMarkdownRemark___frontmatter___cover___ino\n  childMarkdownRemark___frontmatter___cover___atimeMs\n  childMarkdownRemark___frontmatter___cover___mtimeMs\n  childMarkdownRemark___frontmatter___cover___ctimeMs\n  childMarkdownRemark___frontmatter___cover___atime\n  childMarkdownRemark___frontmatter___cover___mtime\n  childMarkdownRemark___frontmatter___cover___ctime\n  childMarkdownRemark___frontmatter___cover___birthtime\n  childMarkdownRemark___frontmatter___cover___birthtimeMs\n  childMarkdownRemark___frontmatter___cover___blksize\n  childMarkdownRemark___frontmatter___cover___blocks\n  childMarkdownRemark___frontmatter___cover___publicURL\n  childMarkdownRemark___frontmatter___cover___id\n  childMarkdownRemark___frontmatter___cover___children\n  childMarkdownRemark___frontmatter___tags\n  childMarkdownRemark___frontmatter___beer\n  childMarkdownRemark___frontmatter___description\n  childMarkdownRemark___frontmatter___repository\n  childMarkdownRemark___frontmatter___live\n  childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___rawMarkdownBody @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___fileAbsolutePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___fields___slug @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___htmlAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  childMarkdownRemark___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n}\n\ninput FileFilterInput {\n  sourceInstanceName: StringQueryOperatorInput\n  absolutePath: StringQueryOperatorInput\n  relativePath: StringQueryOperatorInput\n  extension: StringQueryOperatorInput\n  size: IntQueryOperatorInput\n  prettySize: StringQueryOperatorInput\n  modifiedTime: DateQueryOperatorInput\n  accessTime: DateQueryOperatorInput\n  changeTime: DateQueryOperatorInput\n  birthTime: DateQueryOperatorInput\n  root: StringQueryOperatorInput\n  dir: StringQueryOperatorInput\n  base: StringQueryOperatorInput\n  ext: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  relativeDirectory: StringQueryOperatorInput\n  dev: IntQueryOperatorInput\n  mode: IntQueryOperatorInput\n  nlink: IntQueryOperatorInput\n  uid: IntQueryOperatorInput\n  gid: IntQueryOperatorInput\n  rdev: IntQueryOperatorInput\n  ino: FloatQueryOperatorInput\n  atimeMs: FloatQueryOperatorInput\n  mtimeMs: FloatQueryOperatorInput\n  ctimeMs: FloatQueryOperatorInput\n  atime: DateQueryOperatorInput\n  mtime: DateQueryOperatorInput\n  ctime: DateQueryOperatorInput\n  birthtime: DateQueryOperatorInput\n  birthtimeMs: FloatQueryOperatorInput\n  blksize: IntQueryOperatorInput\n  blocks: IntQueryOperatorInput\n  publicURL: StringQueryOperatorInput\n  childImageSharp: ImageSharpFilterInput\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  childMarkdownRemark: MarkdownRemarkFilterInput\n}\n\ntype FileGroupConnection {\n  totalCount: Int!\n  edges: [FileEdge!]!\n  nodes: [File!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput FileSortInput {\n  fields: [FileFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ninput FloatQueryOperatorInput {\n  eq: Float\n  ne: Float\n  gt: Float\n  gte: Float\n  lt: Float\n  lte: Float\n  in: [Float]\n  nin: [Float]\n}\n\nenum ImageCropFocus {\n  CENTER\n  NORTH\n  NORTHEAST\n  EAST\n  SOUTHEAST\n  SOUTH\n  SOUTHWEST\n  WEST\n  NORTHWEST\n  ENTROPY\n  ATTENTION\n}\n\nenum ImageFit {\n  COVER\n  CONTAIN\n  FILL\n  INSIDE\n  OUTSIDE\n}\n\nenum ImageFormat {\n  NO_CHANGE\n  JPG\n  PNG\n  WEBP\n}\n\ntype ImageSharp implements Node {\n  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpFixed\n  resolutions(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResolutions @deprecated(reason: "Resolutions was deprecated in Gatsby v2. It\'s been renamed to \\"fixed\\" https://example.com/write-docs-and-fix-this-example-link")\n  fluid(\n    maxWidth: Int\n    maxHeight: Int\n    base64Width: Int\n    grayscale: Boolean = false\n    jpegProgressive: Boolean = true\n    pngCompressionSpeed: Int = 4\n    duotone: DuotoneGradient\n    traceSVG: Potrace\n    quality: Int\n    jpegQuality: Int\n    pngQuality: Int\n    webpQuality: Int\n    toFormat: ImageFormat = NO_CHANGE\n    toFormatBase64: ImageFormat = NO_CHANGE\n    cropFocus: ImageCropFocus = ATTENTION\n    fit: ImageFit = COVER\n    background: String = "rgba(0,0,0,1)"\n    rotate: Int = 0\n    trim: Float = 0\n    sizes: String = ""\n\n    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]\n    srcSetBreakpoints: [Int] = []\n  ): ImageSharpFluid\n  sizes(\n    maxWidth: Int\n    maxHeight: Int\n    base64Width: Int\n    grayscale: Boolean = false\n    jpegProgressive: Boolean = true\n    pngCompressionSpeed: Int = 4\n    duotone: DuotoneGradient\n    traceSVG: Potrace\n    quality: Int\n    jpegQuality: Int\n    pngQuality: Int\n    webpQuality: Int\n    toFormat: ImageFormat = NO_CHANGE\n    toFormatBase64: ImageFormat = NO_CHANGE\n    cropFocus: ImageCropFocus = ATTENTION\n    fit: ImageFit = COVER\n    background: String = "rgba(0,0,0,1)"\n    rotate: Int = 0\n    trim: Float = 0\n    sizes: String = ""\n\n    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]\n    srcSetBreakpoints: [Int] = []\n  ): ImageSharpSizes @deprecated(reason: "Sizes was deprecated in Gatsby v2. It\'s been renamed to \\"fluid\\" https://example.com/write-docs-and-fix-this-example-link")\n  original: ImageSharpOriginal\n  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, base64: Boolean = false, traceSVG: Potrace, toFormat: ImageFormat = NO_CHANGE, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResize\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ntype ImageSharpConnection {\n  totalCount: Int!\n  edges: [ImageSharpEdge!]!\n  nodes: [ImageSharp!]!\n  pageInfo: PageInfo!\n  distinct(field: ImageSharpFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!\n}\n\ntype ImageSharpEdge {\n  next: ImageSharp\n  node: ImageSharp!\n  previous: ImageSharp\n}\n\nenum ImageSharpFieldsEnum {\n  fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resolutions___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  sizes___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n}\n\ninput ImageSharpFilterInput {\n  fixed: ImageSharpFixedFilterInput\n  resolutions: ImageSharpResolutionsFilterInput\n  fluid: ImageSharpFluidFilterInput\n  sizes: ImageSharpSizesFilterInput\n  original: ImageSharpOriginalFilterInput\n  resize: ImageSharpResizeFilterInput\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ntype ImageSharpFixed {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float\n  width: Float!\n  height: Float!\n  src: String!\n  srcSet: String!\n  srcWebp: String\n  srcSetWebp: String\n  originalName: String\n}\n\ninput ImageSharpFixedFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  width: FloatQueryOperatorInput\n  height: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n}\n\ntype ImageSharpFluid {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float!\n  src: String!\n  srcSet: String!\n  srcWebp: String\n  srcSetWebp: String\n  sizes: String!\n  originalImg: String\n  originalName: String\n  presentationWidth: Int!\n  presentationHeight: Int!\n}\n\ninput ImageSharpFluidFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  sizes: StringQueryOperatorInput\n  originalImg: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n  presentationWidth: IntQueryOperatorInput\n  presentationHeight: IntQueryOperatorInput\n}\n\ntype ImageSharpGroupConnection {\n  totalCount: Int!\n  edges: [ImageSharpEdge!]!\n  nodes: [ImageSharp!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype ImageSharpOriginal {\n  width: Float\n  height: Float\n  src: String\n}\n\ninput ImageSharpOriginalFilterInput {\n  width: FloatQueryOperatorInput\n  height: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n}\n\ntype ImageSharpResize {\n  src: String\n  tracedSVG: String\n  width: Int\n  height: Int\n  aspectRatio: Float\n  originalName: String\n}\n\ninput ImageSharpResizeFilterInput {\n  src: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  width: IntQueryOperatorInput\n  height: IntQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  originalName: StringQueryOperatorInput\n}\n\ntype ImageSharpResolutions {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float\n  width: Float!\n  height: Float!\n  src: String!\n  srcSet: String!\n  srcWebp: String\n  srcSetWebp: String\n  originalName: String\n}\n\ninput ImageSharpResolutionsFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  width: FloatQueryOperatorInput\n  height: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n}\n\ntype ImageSharpSizes {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float!\n  src: String!\n  srcSet: String!\n  srcWebp: String\n  srcSetWebp: String\n  sizes: String!\n  originalImg: String\n  originalName: String\n  presentationWidth: Int!\n  presentationHeight: Int!\n}\n\ninput ImageSharpSizesFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  sizes: StringQueryOperatorInput\n  originalImg: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n  presentationWidth: IntQueryOperatorInput\n  presentationHeight: IntQueryOperatorInput\n}\n\ninput ImageSharpSortInput {\n  fields: [ImageSharpFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype Internal {\n  content: String\n  contentDigest: String!\n  description: String\n  fieldOwners: [String]\n  ignoreType: Boolean\n  mediaType: String\n  owner: String!\n  type: String!\n}\n\ninput InternalFilterInput {\n  content: StringQueryOperatorInput\n  contentDigest: StringQueryOperatorInput\n  description: StringQueryOperatorInput\n  fieldOwners: StringQueryOperatorInput\n  ignoreType: BooleanQueryOperatorInput\n  mediaType: StringQueryOperatorInput\n  owner: StringQueryOperatorInput\n  type: StringQueryOperatorInput\n}\n\ninput IntQueryOperatorInput {\n  eq: Int\n  ne: Int\n  gt: Int\n  gte: Int\n  lt: Int\n  lte: Int\n  in: [Int]\n  nin: [Int]\n}\n\n# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\nscalar JSON\n\ninput JSONQueryOperatorInput {\n  eq: JSON\n  ne: JSON\n  in: [JSON]\n  nin: [JSON]\n  regex: JSON\n  glob: JSON\n}\n\nenum MarkdownExcerptFormats {\n  PLAIN\n  HTML\n  MARKDOWN\n}\n\ntype MarkdownHeading {\n  id: String\n  value: String\n  depth: Int\n}\n\ninput MarkdownHeadingFilterInput {\n  id: StringQueryOperatorInput\n  value: StringQueryOperatorInput\n  depth: IntQueryOperatorInput\n}\n\ninput MarkdownHeadingFilterListInput {\n  elemMatch: MarkdownHeadingFilterInput\n}\n\nenum MarkdownHeadingLevels {\n  h1\n  h2\n  h3\n  h4\n  h5\n  h6\n}\n\ntype MarkdownRemark implements Node {\n  id: ID!\n  frontmatter: MarkdownRemarkFrontmatter\n  excerpt(pruneLength: Int = 140, truncate: Boolean = false, format: MarkdownExcerptFormats = PLAIN): String\n  rawMarkdownBody: String\n  fileAbsolutePath: String\n  fields: MarkdownRemarkFields\n  html: String\n  htmlAst: JSON\n  excerptAst(pruneLength: Int = 140, truncate: Boolean = false): JSON\n  headings(depth: MarkdownHeadingLevels): [MarkdownHeading]\n  timeToRead: Int\n  tableOfContents(absolute: Boolean = true, pathToSlugField: String = "fields.slug", maxDepth: Int, heading: String): String\n  wordCount: MarkdownWordCount\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ntype MarkdownRemarkConnection {\n  totalCount: Int!\n  edges: [MarkdownRemarkEdge!]!\n  nodes: [MarkdownRemark!]!\n  pageInfo: PageInfo!\n  distinct(field: MarkdownRemarkFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: MarkdownRemarkFieldsEnum!): [MarkdownRemarkGroupConnection!]!\n}\n\ntype MarkdownRemarkEdge {\n  next: MarkdownRemark\n  node: MarkdownRemark!\n  previous: MarkdownRemark\n}\n\ntype MarkdownRemarkFields {\n  slug: String\n}\n\nenum MarkdownRemarkFieldsEnum {\n  id\n  frontmatter___title\n  frontmatter___posttype\n  frontmatter___date\n  frontmatter___category\n  frontmatter___cover___sourceInstanceName\n  frontmatter___cover___absolutePath\n  frontmatter___cover___relativePath\n  frontmatter___cover___extension\n  frontmatter___cover___size\n  frontmatter___cover___prettySize\n  frontmatter___cover___modifiedTime\n  frontmatter___cover___accessTime\n  frontmatter___cover___changeTime\n  frontmatter___cover___birthTime\n  frontmatter___cover___root\n  frontmatter___cover___dir\n  frontmatter___cover___base\n  frontmatter___cover___ext\n  frontmatter___cover___name\n  frontmatter___cover___relativeDirectory\n  frontmatter___cover___dev\n  frontmatter___cover___mode\n  frontmatter___cover___nlink\n  frontmatter___cover___uid\n  frontmatter___cover___gid\n  frontmatter___cover___rdev\n  frontmatter___cover___ino\n  frontmatter___cover___atimeMs\n  frontmatter___cover___mtimeMs\n  frontmatter___cover___ctimeMs\n  frontmatter___cover___atime\n  frontmatter___cover___mtime\n  frontmatter___cover___ctime\n  frontmatter___cover___birthtime\n  frontmatter___cover___birthtimeMs\n  frontmatter___cover___blksize\n  frontmatter___cover___blocks\n  frontmatter___cover___publicURL\n  frontmatter___cover___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___cover___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___cover___id\n  frontmatter___cover___parent___id\n  frontmatter___cover___parent___children\n  frontmatter___cover___children\n  frontmatter___cover___children___id\n  frontmatter___cover___children___children\n  frontmatter___cover___internal___content\n  frontmatter___cover___internal___contentDigest\n  frontmatter___cover___internal___description\n  frontmatter___cover___internal___fieldOwners\n  frontmatter___cover___internal___ignoreType\n  frontmatter___cover___internal___mediaType\n  frontmatter___cover___internal___owner\n  frontmatter___cover___internal___type\n  frontmatter___cover___childMarkdownRemark___id\n  frontmatter___cover___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___cover___childMarkdownRemark___rawMarkdownBody @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___cover___childMarkdownRemark___fileAbsolutePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___cover___childMarkdownRemark___html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___cover___childMarkdownRemark___htmlAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___cover___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___cover___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___cover___childMarkdownRemark___timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___cover___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___cover___childMarkdownRemark___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  frontmatter___tags\n  frontmatter___beer\n  frontmatter___description\n  frontmatter___repository\n  frontmatter___live\n  excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  rawMarkdownBody @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fileAbsolutePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  fields___slug @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  htmlAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")\n}\n\ninput MarkdownRemarkFieldsFilterInput {\n  slug: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFilterInput {\n  id: StringQueryOperatorInput\n  frontmatter: MarkdownRemarkFrontmatterFilterInput\n  excerpt: StringQueryOperatorInput\n  rawMarkdownBody: StringQueryOperatorInput\n  fileAbsolutePath: StringQueryOperatorInput\n  fields: MarkdownRemarkFieldsFilterInput\n  html: StringQueryOperatorInput\n  htmlAst: JSONQueryOperatorInput\n  excerptAst: JSONQueryOperatorInput\n  headings: MarkdownHeadingFilterListInput\n  timeToRead: IntQueryOperatorInput\n  tableOfContents: StringQueryOperatorInput\n  wordCount: MarkdownWordCountFilterInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ntype MarkdownRemarkFrontmatter {\n  title: String\n  posttype: String\n  date(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date\n  category: String\n  cover: File\n  tags: [String]\n  beer: String\n  description: String\n  repository: String\n  live: String\n}\n\ninput MarkdownRemarkFrontmatterFilterInput {\n  title: StringQueryOperatorInput\n  posttype: StringQueryOperatorInput\n  date: DateQueryOperatorInput\n  category: StringQueryOperatorInput\n  cover: FileFilterInput\n  tags: StringQueryOperatorInput\n  beer: StringQueryOperatorInput\n  description: StringQueryOperatorInput\n  repository: StringQueryOperatorInput\n  live: StringQueryOperatorInput\n}\n\ntype MarkdownRemarkGroupConnection {\n  totalCount: Int!\n  edges: [MarkdownRemarkEdge!]!\n  nodes: [MarkdownRemark!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput MarkdownRemarkSortInput {\n  fields: [MarkdownRemarkFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype MarkdownWordCount {\n  paragraphs: Int\n  sentences: Int\n  words: Int\n}\n\ninput MarkdownWordCountFilterInput {\n  paragraphs: IntQueryOperatorInput\n  sentences: IntQueryOperatorInput\n  words: IntQueryOperatorInput\n}\n\n# Node Interface\ninterface Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ninput NodeFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ninput NodeFilterListInput {\n  elemMatch: NodeFilterInput\n}\n\ntype PageInfo {\n  currentPage: Int!\n  hasPreviousPage: Boolean!\n  hasNextPage: Boolean!\n  itemCount: Int!\n  pageCount: Int!\n  perPage: Int\n  totalCount: Int!\n}\n\ninput Potrace {\n  turnPolicy: PotraceTurnPolicy\n  turdSize: Float\n  alphaMax: Float\n  optCurve: Boolean\n  optTolerance: Float\n  threshold: Int\n  blackOnWhite: Boolean\n  color: String\n  background: String\n}\n\nenum PotraceTurnPolicy {\n  TURNPOLICY_BLACK\n  TURNPOLICY_WHITE\n  TURNPOLICY_LEFT\n  TURNPOLICY_RIGHT\n  TURNPOLICY_MINORITY\n  TURNPOLICY_MAJORITY\n}\n\ntype Query {\n  file(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, publicURL: StringQueryOperatorInput, childImageSharp: ImageSharpFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, childMarkdownRemark: MarkdownRemarkFilterInput): File\n  allFile(filter: FileFilterInput, sort: FileSortInput, skip: Int, limit: Int): FileConnection!\n  directory(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Directory\n  allDirectory(filter: DirectoryFilterInput, sort: DirectorySortInput, skip: Int, limit: Int): DirectoryConnection!\n  sitePage(path: StringQueryOperatorInput, component: StringQueryOperatorInput, internalComponentName: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, context: SitePageContextFilterInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput, componentPath: StringQueryOperatorInput): SitePage\n  allSitePage(filter: SitePageFilterInput, sort: SitePageSortInput, skip: Int, limit: Int): SitePageConnection!\n  site(buildTime: DateQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput, port: DateQueryOperatorInput, host: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, pathPrefix: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Site\n  allSite(filter: SiteFilterInput, sort: SiteSortInput, skip: Int, limit: Int): SiteConnection!\n  markdownRemark(id: StringQueryOperatorInput, frontmatter: MarkdownRemarkFrontmatterFilterInput, excerpt: StringQueryOperatorInput, rawMarkdownBody: StringQueryOperatorInput, fileAbsolutePath: StringQueryOperatorInput, fields: MarkdownRemarkFieldsFilterInput, html: StringQueryOperatorInput, htmlAst: JSONQueryOperatorInput, excerptAst: JSONQueryOperatorInput, headings: MarkdownHeadingFilterListInput, timeToRead: IntQueryOperatorInput, tableOfContents: StringQueryOperatorInput, wordCount: MarkdownWordCountFilterInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): MarkdownRemark\n  allMarkdownRemark(filter: MarkdownRemarkFilterInput, sort: MarkdownRemarkSortInput, skip: Int, limit: Int): MarkdownRemarkConnection!\n  imageSharp(fixed: ImageSharpFixedFilterInput, resolutions: ImageSharpResolutionsFilterInput, fluid: ImageSharpFluidFilterInput, sizes: ImageSharpSizesFilterInput, original: ImageSharpOriginalFilterInput, resize: ImageSharpResizeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ImageSharp\n  allImageSharp(filter: ImageSharpFilterInput, sort: ImageSharpSortInput, skip: Int, limit: Int): ImageSharpConnection!\n  siteBuildMetadata(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, buildTime: DateQueryOperatorInput): SiteBuildMetadata\n  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, sort: SiteBuildMetadataSortInput, skip: Int, limit: Int): SiteBuildMetadataConnection!\n  sitePlugin(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, resolve: StringQueryOperatorInput, name: StringQueryOperatorInput, version: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, nodeAPIs: StringQueryOperatorInput, browserAPIs: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, pluginFilepath: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput): SitePlugin\n  allSitePlugin(filter: SitePluginFilterInput, sort: SitePluginSortInput, skip: Int, limit: Int): SitePluginConnection!\n}\n\ntype Site implements Node {\n  buildTime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date\n  siteMetadata: SiteSiteMetadata\n  port(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date\n  host: String\n  polyfill: Boolean\n  pathPrefix: String\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ntype SiteBuildMetadata implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  buildTime(\n    # Format the date using Moment.js\' date tokens, e.g. `date(formatString: "YYYY\n    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js\' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # "milliseconds" but you can also pass in as the measurement "years",\n    # "months", "weeks", "days", "hours", "minutes", and "seconds".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date\n}\n\ntype SiteBuildMetadataConnection {\n  totalCount: Int!\n  edges: [SiteBuildMetadataEdge!]!\n  nodes: [SiteBuildMetadata!]!\n  pageInfo: PageInfo!\n  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!\n}\n\ntype SiteBuildMetadataEdge {\n  next: SiteBuildMetadata\n  node: SiteBuildMetadata!\n  previous: SiteBuildMetadata\n}\n\nenum SiteBuildMetadataFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  buildTime\n}\n\ninput SiteBuildMetadataFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  buildTime: DateQueryOperatorInput\n}\n\ntype SiteBuildMetadataGroupConnection {\n  totalCount: Int!\n  edges: [SiteBuildMetadataEdge!]!\n  nodes: [SiteBuildMetadata!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput SiteBuildMetadataSortInput {\n  fields: [SiteBuildMetadataFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype SiteConnection {\n  totalCount: Int!\n  edges: [SiteEdge!]!\n  nodes: [Site!]!\n  pageInfo: PageInfo!\n  distinct(field: SiteFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!\n}\n\ntype SiteEdge {\n  next: Site\n  node: Site!\n  previous: Site\n}\n\nenum SiteFieldsEnum {\n  buildTime\n  siteMetadata___title\n  siteMetadata___description\n  siteMetadata___author\n  port\n  host\n  polyfill\n  pathPrefix\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n}\n\ninput SiteFilterInput {\n  buildTime: DateQueryOperatorInput\n  siteMetadata: SiteSiteMetadataFilterInput\n  port: DateQueryOperatorInput\n  host: StringQueryOperatorInput\n  polyfill: BooleanQueryOperatorInput\n  pathPrefix: StringQueryOperatorInput\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ntype SiteGroupConnection {\n  totalCount: Int!\n  edges: [SiteEdge!]!\n  nodes: [Site!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype SitePage implements Node {\n  path: String!\n  component: String!\n  internalComponentName: String!\n  componentChunkName: String!\n  matchPath: String\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  isCreatedByStatefulCreatePages: Boolean\n  context: SitePageContext\n  pluginCreator: SitePlugin\n  pluginCreatorId: String\n  componentPath: String\n}\n\ntype SitePageConnection {\n  totalCount: Int!\n  edges: [SitePageEdge!]!\n  nodes: [SitePage!]!\n  pageInfo: PageInfo!\n  distinct(field: SitePageFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!\n}\n\ntype SitePageContext {\n  slug: String\n  limit: Int\n  skip: Int\n  numBlogPages: Int\n  currentPage: Int\n  numProjectPages: Int\n}\n\ninput SitePageContextFilterInput {\n  slug: StringQueryOperatorInput\n  limit: IntQueryOperatorInput\n  skip: IntQueryOperatorInput\n  numBlogPages: IntQueryOperatorInput\n  currentPage: IntQueryOperatorInput\n  numProjectPages: IntQueryOperatorInput\n}\n\ntype SitePageEdge {\n  next: SitePage\n  node: SitePage!\n  previous: SitePage\n}\n\nenum SitePageFieldsEnum {\n  path\n  component\n  internalComponentName\n  componentChunkName\n  matchPath\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  isCreatedByStatefulCreatePages\n  context___slug\n  context___limit\n  context___skip\n  context___numBlogPages\n  context___currentPage\n  context___numProjectPages\n  pluginCreator___id\n  pluginCreator___parent___id\n  pluginCreator___parent___parent___id\n  pluginCreator___parent___parent___children\n  pluginCreator___parent___children\n  pluginCreator___parent___children___id\n  pluginCreator___parent___children___children\n  pluginCreator___parent___internal___content\n  pluginCreator___parent___internal___contentDigest\n  pluginCreator___parent___internal___description\n  pluginCreator___parent___internal___fieldOwners\n  pluginCreator___parent___internal___ignoreType\n  pluginCreator___parent___internal___mediaType\n  pluginCreator___parent___internal___owner\n  pluginCreator___parent___internal___type\n  pluginCreator___children\n  pluginCreator___children___id\n  pluginCreator___children___parent___id\n  pluginCreator___children___parent___children\n  pluginCreator___children___children\n  pluginCreator___children___children___id\n  pluginCreator___children___children___children\n  pluginCreator___children___internal___content\n  pluginCreator___children___internal___contentDigest\n  pluginCreator___children___internal___description\n  pluginCreator___children___internal___fieldOwners\n  pluginCreator___children___internal___ignoreType\n  pluginCreator___children___internal___mediaType\n  pluginCreator___children___internal___owner\n  pluginCreator___children___internal___type\n  pluginCreator___internal___content\n  pluginCreator___internal___contentDigest\n  pluginCreator___internal___description\n  pluginCreator___internal___fieldOwners\n  pluginCreator___internal___ignoreType\n  pluginCreator___internal___mediaType\n  pluginCreator___internal___owner\n  pluginCreator___internal___type\n  pluginCreator___resolve\n  pluginCreator___name\n  pluginCreator___version\n  pluginCreator___pluginOptions___plugins\n  pluginCreator___pluginOptions___plugins___resolve\n  pluginCreator___pluginOptions___plugins___id\n  pluginCreator___pluginOptions___plugins___name\n  pluginCreator___pluginOptions___plugins___version\n  pluginCreator___pluginOptions___plugins___browserAPIs\n  pluginCreator___pluginOptions___plugins___pluginFilepath\n  pluginCreator___pluginOptions___name\n  pluginCreator___pluginOptions___path\n  pluginCreator___pluginOptions___commonmark\n  pluginCreator___pluginOptions___footnotes\n  pluginCreator___pluginOptions___pedantic\n  pluginCreator___pluginOptions___gfm\n  pluginCreator___pluginOptions___maxWidth\n  pluginCreator___pluginOptions___withWebp\n  pluginCreator___pluginOptions___ignoreFileExtensions\n  pluginCreator___pluginOptions___classPrefix\n  pluginCreator___pluginOptions___showLineNumbers\n  pluginCreator___pluginOptions___noInlineHighlight\n  pluginCreator___pluginOptions___languageExtensions\n  pluginCreator___pluginOptions___languageExtensions___language\n  pluginCreator___pluginOptions___languageExtensions___extend\n  pluginCreator___pluginOptions___prompt___user\n  pluginCreator___pluginOptions___prompt___host\n  pluginCreator___pluginOptions___prompt___global\n  pluginCreator___pluginOptions___short_name\n  pluginCreator___pluginOptions___start_url\n  pluginCreator___pluginOptions___background_color\n  pluginCreator___pluginOptions___theme_color\n  pluginCreator___pluginOptions___display\n  pluginCreator___pluginOptions___icon\n  pluginCreator___pluginOptions___cache_busting_mode\n  pluginCreator___pluginOptions___include_favicon\n  pluginCreator___pluginOptions___legacy\n  pluginCreator___pluginOptions___theme_color_in_head\n  pluginCreator___pluginOptions___cacheDigest\n  pluginCreator___pluginOptions___printRejected\n  pluginCreator___pluginOptions___develop\n  pluginCreator___pluginOptions___tailwind\n  pluginCreator___pluginOptions___purgeOnly\n  pluginCreator___pluginOptions___debug\n  pluginCreator___pluginOptions___pathCheck\n  pluginCreator___nodeAPIs\n  pluginCreator___browserAPIs\n  pluginCreator___ssrAPIs\n  pluginCreator___pluginFilepath\n  pluginCreator___packageJson___name\n  pluginCreator___packageJson___description\n  pluginCreator___packageJson___version\n  pluginCreator___packageJson___main\n  pluginCreator___packageJson___license\n  pluginCreator___packageJson___dependencies\n  pluginCreator___packageJson___dependencies___name\n  pluginCreator___packageJson___dependencies___version\n  pluginCreator___packageJson___devDependencies\n  pluginCreator___packageJson___devDependencies___name\n  pluginCreator___packageJson___devDependencies___version\n  pluginCreator___packageJson___peerDependencies\n  pluginCreator___packageJson___peerDependencies___name\n  pluginCreator___packageJson___peerDependencies___version\n  pluginCreator___packageJson___keywords\n  pluginCreatorId\n  componentPath\n}\n\ninput SitePageFilterInput {\n  path: StringQueryOperatorInput\n  component: StringQueryOperatorInput\n  internalComponentName: StringQueryOperatorInput\n  componentChunkName: StringQueryOperatorInput\n  matchPath: StringQueryOperatorInput\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput\n  context: SitePageContextFilterInput\n  pluginCreator: SitePluginFilterInput\n  pluginCreatorId: StringQueryOperatorInput\n  componentPath: StringQueryOperatorInput\n}\n\ntype SitePageGroupConnection {\n  totalCount: Int!\n  edges: [SitePageEdge!]!\n  nodes: [SitePage!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput SitePageSortInput {\n  fields: [SitePageFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype SitePlugin implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  resolve: String\n  name: String\n  version: String\n  pluginOptions: SitePluginPluginOptions\n  nodeAPIs: [String]\n  browserAPIs: [String]\n  ssrAPIs: [String]\n  pluginFilepath: String\n  packageJson: SitePluginPackageJson\n}\n\ntype SitePluginConnection {\n  totalCount: Int!\n  edges: [SitePluginEdge!]!\n  nodes: [SitePlugin!]!\n  pageInfo: PageInfo!\n  distinct(field: SitePluginFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!\n}\n\ntype SitePluginEdge {\n  next: SitePlugin\n  node: SitePlugin!\n  previous: SitePlugin\n}\n\nenum SitePluginFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  resolve\n  name\n  version\n  pluginOptions___plugins\n  pluginOptions___plugins___resolve\n  pluginOptions___plugins___id\n  pluginOptions___plugins___name\n  pluginOptions___plugins___version\n  pluginOptions___plugins___pluginOptions___maxWidth\n  pluginOptions___plugins___pluginOptions___withWebp\n  pluginOptions___plugins___pluginOptions___ignoreFileExtensions\n  pluginOptions___plugins___pluginOptions___classPrefix\n  pluginOptions___plugins___pluginOptions___showLineNumbers\n  pluginOptions___plugins___pluginOptions___noInlineHighlight\n  pluginOptions___plugins___pluginOptions___languageExtensions\n  pluginOptions___plugins___browserAPIs\n  pluginOptions___plugins___pluginFilepath\n  pluginOptions___name\n  pluginOptions___path\n  pluginOptions___commonmark\n  pluginOptions___footnotes\n  pluginOptions___pedantic\n  pluginOptions___gfm\n  pluginOptions___maxWidth\n  pluginOptions___withWebp\n  pluginOptions___ignoreFileExtensions\n  pluginOptions___classPrefix\n  pluginOptions___showLineNumbers\n  pluginOptions___noInlineHighlight\n  pluginOptions___languageExtensions\n  pluginOptions___languageExtensions___language\n  pluginOptions___languageExtensions___extend\n  pluginOptions___prompt___user\n  pluginOptions___prompt___host\n  pluginOptions___prompt___global\n  pluginOptions___short_name\n  pluginOptions___start_url\n  pluginOptions___background_color\n  pluginOptions___theme_color\n  pluginOptions___display\n  pluginOptions___icon\n  pluginOptions___cache_busting_mode\n  pluginOptions___include_favicon\n  pluginOptions___legacy\n  pluginOptions___theme_color_in_head\n  pluginOptions___cacheDigest\n  pluginOptions___printRejected\n  pluginOptions___develop\n  pluginOptions___tailwind\n  pluginOptions___purgeOnly\n  pluginOptions___debug\n  pluginOptions___pathCheck\n  nodeAPIs\n  browserAPIs\n  ssrAPIs\n  pluginFilepath\n  packageJson___name\n  packageJson___description\n  packageJson___version\n  packageJson___main\n  packageJson___license\n  packageJson___dependencies\n  packageJson___dependencies___name\n  packageJson___dependencies___version\n  packageJson___devDependencies\n  packageJson___devDependencies___name\n  packageJson___devDependencies___version\n  packageJson___peerDependencies\n  packageJson___peerDependencies___name\n  packageJson___peerDependencies___version\n  packageJson___keywords\n}\n\ninput SitePluginFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  resolve: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n  pluginOptions: SitePluginPluginOptionsFilterInput\n  nodeAPIs: StringQueryOperatorInput\n  browserAPIs: StringQueryOperatorInput\n  ssrAPIs: StringQueryOperatorInput\n  pluginFilepath: StringQueryOperatorInput\n  packageJson: SitePluginPackageJsonFilterInput\n}\n\ntype SitePluginGroupConnection {\n  totalCount: Int!\n  edges: [SitePluginEdge!]!\n  nodes: [SitePlugin!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype SitePluginPackageJson {\n  name: String\n  description: String\n  version: String\n  main: String\n  license: String\n  dependencies: [SitePluginPackageJsonDependencies]\n  devDependencies: [SitePluginPackageJsonDevDependencies]\n  peerDependencies: [SitePluginPackageJsonPeerDependencies]\n  keywords: [String]\n}\n\ntype SitePluginPackageJsonDependencies {\n  name: String\n  version: String\n}\n\ninput SitePluginPackageJsonDependenciesFilterInput {\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonDependenciesFilterListInput {\n  elemMatch: SitePluginPackageJsonDependenciesFilterInput\n}\n\ntype SitePluginPackageJsonDevDependencies {\n  name: String\n  version: String\n}\n\ninput SitePluginPackageJsonDevDependenciesFilterInput {\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonDevDependenciesFilterListInput {\n  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput\n}\n\ninput SitePluginPackageJsonFilterInput {\n  name: StringQueryOperatorInput\n  description: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n  main: StringQueryOperatorInput\n  license: StringQueryOperatorInput\n  dependencies: SitePluginPackageJsonDependenciesFilterListInput\n  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput\n  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput\n  keywords: StringQueryOperatorInput\n}\n\ntype SitePluginPackageJsonPeerDependencies {\n  name: String\n  version: String\n}\n\ninput SitePluginPackageJsonPeerDependenciesFilterInput {\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonPeerDependenciesFilterListInput {\n  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput\n}\n\ntype SitePluginPluginOptions {\n  plugins: [SitePluginPluginOptionsPlugins]\n  name: String\n  path: String\n  commonmark: Boolean\n  footnotes: Boolean\n  pedantic: Boolean\n  gfm: Boolean\n  maxWidth: Int\n  withWebp: Boolean\n  ignoreFileExtensions: [String]\n  classPrefix: String\n  showLineNumbers: Boolean\n  noInlineHighlight: Boolean\n  languageExtensions: [SitePluginPluginOptionsLanguageExtensions]\n  prompt: SitePluginPluginOptionsPrompt\n  short_name: String\n  start_url: String\n  background_color: String\n  theme_color: String\n  display: String\n  icon: String\n  cache_busting_mode: String\n  include_favicon: Boolean\n  legacy: Boolean\n  theme_color_in_head: Boolean\n  cacheDigest: String\n  printRejected: Boolean\n  develop: Boolean\n  tailwind: Boolean\n  purgeOnly: [String]\n  debug: Boolean\n  pathCheck: Boolean\n}\n\ninput SitePluginPluginOptionsFilterInput {\n  plugins: SitePluginPluginOptionsPluginsFilterListInput\n  name: StringQueryOperatorInput\n  path: StringQueryOperatorInput\n  commonmark: BooleanQueryOperatorInput\n  footnotes: BooleanQueryOperatorInput\n  pedantic: BooleanQueryOperatorInput\n  gfm: BooleanQueryOperatorInput\n  maxWidth: IntQueryOperatorInput\n  withWebp: BooleanQueryOperatorInput\n  ignoreFileExtensions: StringQueryOperatorInput\n  classPrefix: StringQueryOperatorInput\n  showLineNumbers: BooleanQueryOperatorInput\n  noInlineHighlight: BooleanQueryOperatorInput\n  languageExtensions: SitePluginPluginOptionsLanguageExtensionsFilterListInput\n  prompt: SitePluginPluginOptionsPromptFilterInput\n  short_name: StringQueryOperatorInput\n  start_url: StringQueryOperatorInput\n  background_color: StringQueryOperatorInput\n  theme_color: StringQueryOperatorInput\n  display: StringQueryOperatorInput\n  icon: StringQueryOperatorInput\n  cache_busting_mode: StringQueryOperatorInput\n  include_favicon: BooleanQueryOperatorInput\n  legacy: BooleanQueryOperatorInput\n  theme_color_in_head: BooleanQueryOperatorInput\n  cacheDigest: StringQueryOperatorInput\n  printRejected: BooleanQueryOperatorInput\n  develop: BooleanQueryOperatorInput\n  tailwind: BooleanQueryOperatorInput\n  purgeOnly: StringQueryOperatorInput\n  debug: BooleanQueryOperatorInput\n  pathCheck: BooleanQueryOperatorInput\n}\n\ntype SitePluginPluginOptionsLanguageExtensions {\n  language: String\n  extend: String\n}\n\ninput SitePluginPluginOptionsLanguageExtensionsFilterInput {\n  language: StringQueryOperatorInput\n  extend: StringQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsLanguageExtensionsFilterListInput {\n  elemMatch: SitePluginPluginOptionsLanguageExtensionsFilterInput\n}\n\ntype SitePluginPluginOptionsPlugins {\n  resolve: String\n  id: String\n  name: String\n  version: String\n  pluginOptions: SitePluginPluginOptionsPluginsPluginOptions\n  browserAPIs: [String]\n  pluginFilepath: String\n}\n\ninput SitePluginPluginOptionsPluginsFilterInput {\n  resolve: StringQueryOperatorInput\n  id: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n  pluginOptions: SitePluginPluginOptionsPluginsPluginOptionsFilterInput\n  browserAPIs: StringQueryOperatorInput\n  pluginFilepath: StringQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsPluginsFilterListInput {\n  elemMatch: SitePluginPluginOptionsPluginsFilterInput\n}\n\ntype SitePluginPluginOptionsPluginsPluginOptions {\n  maxWidth: Int\n  withWebp: Boolean\n  ignoreFileExtensions: [String]\n  classPrefix: String\n  showLineNumbers: Boolean\n  noInlineHighlight: Boolean\n  languageExtensions: [SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensions]\n  prompt: SitePluginPluginOptionsPluginsPluginOptionsPrompt\n}\n\ninput SitePluginPluginOptionsPluginsPluginOptionsFilterInput {\n  maxWidth: IntQueryOperatorInput\n  withWebp: BooleanQueryOperatorInput\n  ignoreFileExtensions: StringQueryOperatorInput\n  classPrefix: StringQueryOperatorInput\n  showLineNumbers: BooleanQueryOperatorInput\n  noInlineHighlight: BooleanQueryOperatorInput\n  languageExtensions: SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensionsFilterListInput\n  prompt: SitePluginPluginOptionsPluginsPluginOptionsPromptFilterInput\n}\n\ntype SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensions {\n  language: String\n  extend: String\n}\n\ninput SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensionsFilterInput {\n  language: StringQueryOperatorInput\n  extend: StringQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensionsFilterListInput {\n  elemMatch: SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensionsFilterInput\n}\n\ntype SitePluginPluginOptionsPluginsPluginOptionsPrompt {\n  user: String\n  host: String\n  global: Boolean\n}\n\ninput SitePluginPluginOptionsPluginsPluginOptionsPromptFilterInput {\n  user: StringQueryOperatorInput\n  host: StringQueryOperatorInput\n  global: BooleanQueryOperatorInput\n}\n\ntype SitePluginPluginOptionsPrompt {\n  user: String\n  host: String\n  global: Boolean\n}\n\ninput SitePluginPluginOptionsPromptFilterInput {\n  user: StringQueryOperatorInput\n  host: StringQueryOperatorInput\n  global: BooleanQueryOperatorInput\n}\n\ninput SitePluginSortInput {\n  fields: [SitePluginFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype SiteSiteMetadata {\n  title: String\n  description: String\n  author: String\n}\n\ninput SiteSiteMetadataFilterInput {\n  title: StringQueryOperatorInput\n  description: StringQueryOperatorInput\n  author: StringQueryOperatorInput\n}\n\ninput SiteSortInput {\n  fields: [SiteFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\nenum SortOrderEnum {\n  ASC\n  DESC\n}\n\ninput StringQueryOperatorInput {\n  eq: String\n  ne: String\n  in: [String]\n  nin: [String]\n  regex: String\n  glob: String\n}\n',
                             tagName: 'graphql' } ],
                        'jsx-a11y/accessible-emoji': 'warn',
                        'jsx-a11y/alt-text': 'warn',
                        'jsx-a11y/anchor-has-content': 'warn',
                        'jsx-a11y/anchor-is-valid': 'warn',
                        'jsx-a11y/aria-activedescendant-has-tabindex': 'warn',
                        'jsx-a11y/aria-props': 'warn',
                        'jsx-a11y/aria-proptypes': 'warn',
                        'jsx-a11y/aria-role': 'warn',
                        'jsx-a11y/aria-unsupported-elements': 'warn',
                        'jsx-a11y/click-events-have-key-events': 'warn',
                        'jsx-a11y/heading-has-content': 'warn',
                        'jsx-a11y/html-has-lang': 'warn',
                        'jsx-a11y/iframe-has-title': 'warn',
                        'jsx-a11y/img-redundant-alt': 'warn',
                        'jsx-a11y/interactive-supports-focus': 'warn',
                        'jsx-a11y/label-has-associated-control': 'warn',
                        'jsx-a11y/lang': 'warn',
                        'jsx-a11y/media-has-caption': 'warn',
                        'jsx-a11y/mouse-events-have-key-events': 'warn',
                        'jsx-a11y/no-access-key': 'warn',
                        'jsx-a11y/no-autofocus': 'warn',
                        'jsx-a11y/no-distracting-elements': 'warn',
                        'jsx-a11y/no-interactive-element-to-noninteractive-role': 'warn',
                        'jsx-a11y/no-noninteractive-element-interactions': 'warn',
                        'jsx-a11y/no-noninteractive-element-to-interactive-role': 'warn',
                        'jsx-a11y/no-noninteractive-tabindex': 'warn',
                        'jsx-a11y/no-onchange': 'warn',
                        'jsx-a11y/no-redundant-roles': 'warn',
                        'jsx-a11y/no-static-element-interactions': 'warn',
                        'jsx-a11y/role-has-required-aria-props': 'warn',
                        'jsx-a11y/role-supports-aria-props': 'warn',
                        'jsx-a11y/scope': 'warn',
                        'jsx-a11y/tabindex-no-positive': 'warn' } } },
               loader:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/eslint-loader/index.js' } ] },
        { oneOf:
           [ { use:
                [ { options: { hmr: false },
                    loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/style-loader/index.js' },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/css-loader/index.js',
                    options:
                     { sourceMap: true,
                       camelCase: 'dashesOnly',
                       localIdentName: '[name]--[local]--[hash:base64:5]',
                       modules: true,
                       importLoaders: 1 } },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-purgecss/loader.js',
                    options:
                     { content:
                        [ '/home/sandy/Documents/coding projects/SandyDotDev/src/**/!(*.d).{ts,js,jsx,tsx}' ],
                       rejected: true,
                       printRejected: true,
                       printAll: false,
                       debug: true,
                       develop: true,
                       tailwind: true,
                       ignore: [],
                       purgeOnly: [ 'tailwindcss/' ],
                       extractors: [],
                       whitelist: [ 'html', 'body' ],
                       defaultExtractor: [Function] } },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/postcss-loader/src/index.js',
                    options:
                     { ident: 'postcss-1',
                       sourceMap: true,
                       plugins: [Function: plugins],
                       browsers: undefined } } ],
               test: /\.module\.css$/ },
             { use:
                [ { options: { hmr: true },
                    loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/style-loader/index.js' },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/css-loader/index.js',
                    options:
                     { sourceMap: true,
                       camelCase: 'dashesOnly',
                       localIdentName: '[name]--[local]--[hash:base64:5]',
                       importLoaders: 1 } },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-purgecss/loader.js',
                    options:
                     { content:
                        [ '/home/sandy/Documents/coding projects/SandyDotDev/src/**/!(*.d).{ts,js,jsx,tsx}' ],
                       rejected: true,
                       printRejected: true,
                       printAll: false,
                       debug: true,
                       develop: true,
                       tailwind: true,
                       ignore: [],
                       purgeOnly: [ 'tailwindcss/' ],
                       extractors: [],
                       whitelist: [ 'html', 'body' ],
                       defaultExtractor: [Function] } },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/postcss-loader/src/index.js',
                    options:
                     { ident: 'postcss-2',
                       sourceMap: true,
                       plugins: [Function: plugins],
                       browsers: undefined } } ],
               test: /\.css$/ } ] },
        { include: /node_modules\/react-dom/,
          test: /\.jsx?$/,
          use:
           { loader:
              '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby/dist/utils/webpack-hmr-hooks-patch.js' } },
        { oneOf:
           [ { test: /\.module\.s(a|c)ss$/,
               use:
                [ { options: { hmr: false },
                    loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/style-loader/index.js' },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/css-loader/index.js',
                    options:
                     { sourceMap: true,
                       camelCase: 'dashesOnly',
                       localIdentName: '[name]--[local]--[hash:base64:5]',
                       modules: true,
                       importLoaders: 2 } },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-purgecss/loader.js',
                    options:
                     { content:
                        [ '/home/sandy/Documents/coding projects/SandyDotDev/src/**/!(*.d).{ts,js,jsx,tsx}' ],
                       rejected: true,
                       printRejected: true,
                       printAll: false,
                       debug: true,
                       develop: true,
                       tailwind: true,
                       ignore: [],
                       purgeOnly: [ 'tailwindcss/' ],
                       extractors: [],
                       whitelist: [ 'html', 'body' ],
                       defaultExtractor: [Function] } },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/postcss-loader/src/index.js',
                    options:
                     { ident: 'postcss-4',
                       sourceMap: true,
                       plugins: [Function: plugins] } },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/sass-loader/dist/cjs.js',
                    options: { sourceMap: true, plugins: [] } } ] },
             { test: /\.s(a|c)ss$/,
               use:
                [ { options: {},
                    loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/style-loader/index.js' },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/css-loader/index.js',
                    options:
                     { sourceMap: true,
                       camelCase: 'dashesOnly',
                       localIdentName: '[name]--[local]--[hash:base64:5]',
                       importLoaders: 2 } },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-purgecss/loader.js',
                    options:
                     { content:
                        [ '/home/sandy/Documents/coding projects/SandyDotDev/src/**/!(*.d).{ts,js,jsx,tsx}' ],
                       rejected: true,
                       printRejected: true,
                       printAll: false,
                       debug: true,
                       develop: true,
                       tailwind: true,
                       ignore: [],
                       purgeOnly: [ 'tailwindcss/' ],
                       extractors: [],
                       whitelist: [ 'html', 'body' ],
                       defaultExtractor: [Function] } },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/postcss-loader/src/index.js',
                    options:
                     { ident: 'postcss-3',
                       sourceMap: true,
                       plugins: [Function: plugins] } },
                  { loader:
                     '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/sass-loader/dist/cjs.js',
                    options: { sourceMap: true, plugins: [] } } ] } ] } ] },
  plugins:
   [ IgnorePlugin {
       options: { resourceRegExp: /^\.\/locale$/, contextRegExp: /moment$/ },
       checkIgnore: [Function: bound checkIgnore] },
     DefinePlugin {
       definitions:
        { 'process.env': '{}',
          'process.env.NODE_ENV': '"development"',
          'process.env.PUBLIC_DIR': '"/home/sandy/Documents/coding projects/SandyDotDev/public"',
          'process.env.BUILD_STAGE': '"develop"',
          'process.env.CYPRESS_SUPPORT': undefined,
          'process.env.GATSBY_LOGGER': '"ink"',
          'process.env.GATSBY_BUILD_STAGE': '"develop"',
          __BASE_PATH__: '""',
          __PATH_PREFIX__: '""',
          __ASSET_PREFIX__: '""' } },
     HotModuleReplacementPlugin {
       options: {},
       multiStep: undefined,
       fullBuildTimeout: 200,
       requestTimeout: 10000 },
     NoEmitOnErrorsPlugin {},
     GatsbyWebpackEslintGraphqlSchemaReload {
       plugin: { name: 'GatsbyWebpackEslintGraphqlSchemaReload' },
       schema: null },
     DefinePlugin {
       definitions: { __MANIFEST_PLUGIN_HAS_LOCALISATION__: undefined } } ],
  target: 'web',
  devtool: 'cheap-module-source-map',
  performance: { hints: false },
  mode: 'development',
  resolveLoader:
   { modules:
      [ '/home/sandy/Documents/coding projects/SandyDotDev/node_modules',
        '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby/dist/loaders',
        'node_modules' ],
     plugins: [ { apply: [Function: nothing] } ] },
  resolve:
   { extensions: [ '.mjs', '.js', '.jsx', '.wasm', '.json', '.ts', '.tsx' ],
     alias:
      { 'gatsby$':
         '/home/sandy/Documents/coding projects/SandyDotDev/.cache/gatsby-browser-entry.js',
        '@babel/runtime':
         '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/@babel/runtime',
        'core-js':
         '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/core-js',
        'react-hot-loader':
         '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/react-hot-loader',
        'react-lifecycles-compat':
         '/home/sandy/Documents/coding projects/SandyDotDev/.cache/react-lifecycles-compat.js',
        'create-react-context':
         '/home/sandy/Documents/coding projects/SandyDotDev/.cache/create-react-context.js',
        '@pmmmwh/react-refresh-webpack-plugin':
         '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/@pmmmwh/react-refresh-webpack-plugin',
        '@reach/router':
         '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/@reach/router/es' },
     plugins:
      [ { apply: [Function: nothing] },
        { apply: [Function: nothing] },
        { apply: [Function: nothing],
          makePlugin: [Function],
          moduleLoader: [Function],
          topLevelLoader: { apply: [Function: nothing] },
          bind: [Function],
          tsLoaderOptions: [Function],
          forkTsCheckerOptions: [Function] },
        GatsbyThemeComponentShadowingResolverPlugin {
          cache: {},
          themes:
           [ { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby/dist/internal-plugins/dev-404-page',
               themeName: 'dev-404-page' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby/dist/internal-plugins/load-babel-config',
               themeName: 'load-babel-config' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby/dist/internal-plugins/internal-data-bridge',
               themeName: 'internal-data-bridge' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby/dist/internal-plugins/prod-404',
               themeName: 'prod-404' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby/dist/internal-plugins/webpack-theme-component-shadowing',
               themeName: 'webpack-theme-component-shadowing' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-react-helmet',
               themeName: 'gatsby-plugin-react-helmet' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-source-filesystem',
               themeName: 'gatsby-source-filesystem' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-source-filesystem',
               themeName: 'gatsby-source-filesystem' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-transformer-remark',
               themeName: 'gatsby-transformer-remark' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-remark-images',
               themeName: 'gatsby-remark-images' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-remark-copy-linked-files',
               themeName: 'gatsby-remark-copy-linked-files' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-remark-prismjs',
               themeName: 'gatsby-remark-prismjs' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-transformer-sharp',
               themeName: 'gatsby-transformer-sharp' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-sharp',
               themeName: 'gatsby-plugin-sharp' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-manifest',
               themeName: 'gatsby-plugin-manifest' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-offline',
               themeName: 'gatsby-plugin-offline' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-sass',
               themeName: 'gatsby-plugin-sass' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-purgecss',
               themeName: 'gatsby-plugin-purgecss' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' },
             { themeDir: '/home/sandy/Documents/coding projects/SandyDotDev',
               themeName: 'default-site-plugin' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-typescript',
               themeName: 'gatsby-plugin-typescript' },
             { themeDir:
                '/home/sandy/Documents/coding projects/SandyDotDev/node_modules/gatsby-plugin-page-creator',
               themeName: 'gatsby-plugin-page-creator' } ],
          projectRoot: '/home/sandy/Documents/coding projects/SandyDotDev',
          extensions: [ '.mjs', '.js', '.jsx', '.wasm', '.json', '.ts', '.tsx' ] } ] },
  node: { __filename: true } }